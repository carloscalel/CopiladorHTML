
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu May 28 21:19:27 CST 2020
//----------------------------------------------------

package codigo;

import java_cup.runtime.Symbol;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Thu May 28 21:19:27 CST 2020
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\067\000\002\002\004\000\002\002\003\000\002\002" +
    "\004\000\002\003\010\000\002\003\012\000\002\003\013" +
    "\000\002\003\014\000\002\003\014\000\002\003\015\000" +
    "\002\003\015\000\002\003\014\000\002\003\015\000\002" +
    "\003\015\000\002\003\015\000\002\003\015\000\002\003" +
    "\016\000\002\003\016\000\002\003\016\000\002\003\016" +
    "\000\002\003\016\000\002\003\016\000\002\003\016\000" +
    "\002\003\016\000\002\003\020\000\002\003\020\000\002" +
    "\003\017\000\002\003\017\000\002\003\017\000\002\003" +
    "\017\000\002\003\017\000\002\003\017\000\002\003\017" +
    "\000\002\003\017\000\002\004\006\000\002\004\005\000" +
    "\002\013\004\000\002\013\003\000\002\005\006\000\002" +
    "\005\005\000\002\007\006\000\002\007\005\000\002\006" +
    "\003\000\002\006\003\000\002\006\003\000\002\006\003" +
    "\000\002\012\003\000\002\012\005\000\002\010\006\000" +
    "\002\010\005\000\002\014\004\000\002\014\003\000\002" +
    "\011\006\000\002\011\005\000\002\015\004\000\002\015" +
    "\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\232\000\006\004\005\005\007\001\002\000\004\002" +
    "\000\001\002\000\004\005\007\001\002\000\004\002\233" +
    "\001\002\000\004\006\010\001\002\000\006\006\011\007" +
    "\012\001\002\000\004\010\230\001\002\000\016\007\022" +
    "\015\021\016\013\017\014\020\016\022\015\001\002\000" +
    "\014\007\uffd7\011\uffd7\012\uffd7\014\uffd7\022\uffd7\001\002" +
    "\000\014\007\uffd6\011\uffd6\012\uffd6\014\uffd6\022\uffd6\001" +
    "\002\000\012\015\021\016\013\017\014\020\016\001\002" +
    "\000\014\007\uffd5\011\uffd5\012\uffd5\014\uffd5\022\uffd5\001" +
    "\002\000\012\007\uffd4\011\uffd4\012\uffd4\014\uffd4\001\002" +
    "\000\004\007\027\001\002\000\014\007\uffd8\011\uffd8\012" +
    "\uffd8\014\uffd8\022\uffd8\001\002\000\004\006\023\001\002" +
    "\000\004\010\024\001\002\000\004\010\025\001\002\000" +
    "\004\005\026\001\002\000\004\002\ufffd\001\002\000\004" +
    "\006\030\001\002\000\004\010\031\001\002\000\014\010" +
    "\036\011\033\012\035\013\043\021\041\001\002\000\014" +
    "\010\211\011\033\012\035\013\043\021\041\001\002\000" +
    "\014\015\021\016\013\017\014\020\016\022\015\001\002" +
    "\000\014\010\146\011\033\012\035\013\043\021\041\001" +
    "\002\000\014\015\021\016\013\017\014\020\016\022\015" +
    "\001\002\000\004\005\142\001\002\000\014\010\uffdd\011" +
    "\uffdd\012\uffdd\013\uffdd\021\uffdd\001\002\000\014\010\uffcf" +
    "\011\uffcf\012\uffcf\013\uffcf\021\uffcf\001\002\000\010\011" +
    "\074\012\071\013\103\001\002\000\014\010\uffcb\011\uffcb" +
    "\012\uffcb\013\uffcb\021\uffcb\001\002\000\004\014\105\001" +
    "\002\000\014\010\047\011\033\012\035\013\043\021\041" +
    "\001\002\000\014\010\122\011\033\012\035\013\043\021" +
    "\041\001\002\000\012\010\053\012\035\013\043\021\052" +
    "\001\002\000\004\005\051\001\002\000\014\010\uffd0\011" +
    "\uffd0\012\uffd0\013\uffd0\021\uffd0\001\002\000\004\002\ufffb" +
    "\001\002\000\006\012\071\013\103\001\002\000\004\005" +
    "\102\001\002\000\014\010\057\011\033\012\035\013\043" +
    "\021\041\001\002\000\014\010\uffcc\011\uffcc\012\uffcc\013" +
    "\uffcc\021\uffcc\001\002\000\010\010\100\012\035\021\066" +
    "\001\002\000\004\005\077\001\002\000\014\010\uffde\011" +
    "\uffde\012\uffde\013\uffde\021\uffde\001\002\000\012\010\064" +
    "\011\033\012\035\021\062\001\002\000\006\011\074\012" +
    "\071\001\002\000\010\010\067\012\035\021\066\001\002" +
    "\000\004\005\065\001\002\000\004\002\uffe8\001\002\000" +
    "\004\012\071\001\002\000\004\005\070\001\002\000\004" +
    "\002\uffea\001\002\000\014\015\021\016\013\017\014\020" +
    "\016\022\015\001\002\000\004\012\073\001\002\000\014" +
    "\010\uffce\011\uffce\012\uffce\013\uffce\021\uffce\001\002\000" +
    "\014\015\021\016\013\017\014\020\016\022\015\001\002" +
    "\000\004\011\076\001\002\000\014\010\uffd2\011\uffd2\012" +
    "\uffd2\013\uffd2\021\uffd2\001\002\000\004\002\uffee\001\002" +
    "\000\004\005\101\001\002\000\004\002\uffe6\001\002\000" +
    "\004\002\ufff8\001\002\000\004\014\105\001\002\000\006" +
    "\013\116\014\115\001\002\000\004\014\107\001\002\000" +
    "\004\014\112\001\002\000\014\015\021\016\013\017\014" +
    "\020\016\022\015\001\002\000\004\014\111\001\002\000" +
    "\004\014\uffd9\001\002\000\020\013\uffdb\014\uffdb\015\021" +
    "\016\013\017\014\020\016\022\015\001\002\000\004\014" +
    "\114\001\002\000\004\014\uffda\001\002\000\004\014\107" +
    "\001\002\000\014\010\uffe0\011\uffe0\012\uffe0\013\uffe0\021" +
    "\uffe0\001\002\000\004\014\120\001\002\000\020\013\uffdc" +
    "\014\uffdc\015\021\016\013\017\014\020\016\022\015\001" +
    "\002\000\012\010\133\011\033\012\035\021\062\001\002" +
    "\000\004\005\131\001\002\000\012\010\125\011\033\012" +
    "\035\021\062\001\002\000\010\010\127\012\035\021\066" +
    "\001\002\000\004\005\126\001\002\000\004\002\uffef\001" +
    "\002\000\004\005\130\001\002\000\004\002\uffe2\001\002" +
    "\000\004\002\ufff6\001\002\000\010\010\136\011\033\021" +
    "\135\001\002\000\004\005\134\001\002\000\004\002\ufff1" +
    "\001\002\000\004\011\074\001\002\000\004\005\137\001" +
    "\002\000\004\002\uffe1\001\002\000\006\013\141\014\115" +
    "\001\002\000\014\010\uffdf\011\uffdf\012\uffdf\013\uffdf\021" +
    "\uffdf\001\002\000\004\002\ufffc\001\002\000\004\012\144" +
    "\001\002\000\014\010\uffcd\011\uffcd\012\uffcd\013\uffcd\021" +
    "\uffcd\001\002\000\014\010\171\011\033\012\035\013\043" +
    "\021\041\001\002\000\004\005\167\001\002\000\012\010" +
    "\151\011\033\013\043\021\150\001\002\000\006\011\074" +
    "\013\103\001\002\000\004\005\166\001\002\000\014\010" +
    "\154\011\033\012\035\013\043\021\041\001\002\000\012" +
    "\010\162\011\033\012\035\021\062\001\002\000\004\005" +
    "\160\001\002\000\010\010\156\011\033\021\135\001\002" +
    "\000\004\005\157\001\002\000\004\002\uffe7\001\002\000" +
    "\004\002\uffed\001\002\000\010\010\164\011\033\021\135" +
    "\001\002\000\004\005\163\001\002\000\004\002\uffe5\001" +
    "\002\000\004\005\165\001\002\000\004\002\uffe9\001\002" +
    "\000\004\002\ufff9\001\002\000\004\002\ufffa\001\002\000" +
    "\012\010\202\011\033\012\035\021\062\001\002\000\004" +
    "\005\200\001\002\000\012\010\174\011\033\012\035\021" +
    "\062\001\002\000\010\010\176\012\035\021\066\001\002" +
    "\000\004\005\175\001\002\000\004\002\ufff2\001\002\000" +
    "\004\005\177\001\002\000\004\002\uffe4\001\002\000\004" +
    "\002\ufff5\001\002\000\010\010\204\011\033\021\135\001" +
    "\002\000\004\005\203\001\002\000\004\002\ufff0\001\002" +
    "\000\004\005\205\001\002\000\004\002\uffe3\001\002\000" +
    "\004\011\207\001\002\000\014\010\uffd1\011\uffd1\012\uffd1" +
    "\013\uffd1\021\uffd1\001\002\000\012\010\222\011\033\012" +
    "\035\021\062\001\002\000\004\005\220\001\002\000\012" +
    "\010\214\011\033\012\035\021\062\001\002\000\010\010" +
    "\216\012\035\021\066\001\002\000\004\005\215\001\002" +
    "\000\004\002\ufff4\001\002\000\004\005\217\001\002\000" +
    "\004\002\uffec\001\002\000\004\002\ufff7\001\002\000\010" +
    "\010\224\011\033\021\135\001\002\000\004\005\223\001" +
    "\002\000\004\002\ufff3\001\002\000\004\005\225\001\002" +
    "\000\004\002\uffeb\001\002\000\004\022\227\001\002\000" +
    "\012\007\uffd3\011\uffd3\012\uffd3\014\uffd3\001\002\000\004" +
    "\010\231\001\002\000\004\005\232\001\002\000\004\002" +
    "\ufffe\001\002\000\004\002\001\001\002\000\004\002\uffff" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\232\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\004\003\233\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\016\012\017\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\225\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\004\036\010\037\011\041\013\031\014\043\015\033\001" +
    "\001\000\014\004\057\010\037\011\041\014\211\015\207" +
    "\001\001\000\006\006\016\012\205\001\001\000\014\004" +
    "\036\010\037\011\054\013\144\014\146\001\001\000\006" +
    "\006\016\012\142\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\137\001\001\000\014\004\036\010\047\011" +
    "\041\013\044\015\045\001\001\000\014\004\057\010\037" +
    "\011\041\014\122\015\120\001\001\000\010\004\036\011" +
    "\054\013\053\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\004\057\010\037\011\041\014\060\015\055\001\001" +
    "\000\002\001\001\000\004\011\054\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\010\047\011\041\015\062" +
    "\001\001\000\002\001\001\000\004\011\054\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\016\012\071\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\006\016" +
    "\012\074\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\103\001\001\000\002\001\001\000" +
    "\004\007\105\001\001\000\002\001\001\000\006\006\016" +
    "\012\107\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\016\012\112\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\007\116\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\016\012\112\001\001\000\010" +
    "\010\037\011\054\014\131\001\001\000\002\001\001\000" +
    "\010\010\047\011\041\015\123\001\001\000\004\011\054" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\004\057\010\037\011\041\014\171" +
    "\015\167\001\001\000\002\001\001\000\010\004\036\010" +
    "\047\013\151\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\004\057\010\037\011\041\014\154\015\152\001" +
    "\001\000\010\010\037\011\054\014\160\001\001\000\002" +
    "\001\001\000\004\010\047\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\010\047\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\010\037\011\054\014\200\001\001\000\002\001\001\000" +
    "\010\010\047\011\041\015\172\001\001\000\004\011\054" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\010\037\011\054\014\220\001\001\000\002\001" +
    "\001\000\010\010\047\011\041\015\212\001\001\000\004" +
    "\011\054\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\047\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // PARRAFO_CON_O_SIN_SALTO ::= PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO_CON_O_SIN_SALTO",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // PARRAFO_CON_O_SIN_SALTO ::= PARRAFO_CON_O_SIN_SALTO PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO_CON_O_SIN_SALTO",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // PARRAFO ::= agrupacion_contenido CON_O_SIN_NEGRITA agrupacion_contenido 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // PARRAFO ::= salto_linea agrupacion_contenido CON_O_SIN_NEGRITA agrupacion_contenido 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // HACHES_CON_O_SIN_SALTO ::= HACHES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HACHES_CON_O_SIN_SALTO",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // HACHES_CON_O_SIN_SALTO ::= HACHES_CON_O_SIN_SALTO HACHES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HACHES_CON_O_SIN_SALTO",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // HACHES ::= secciones_encabezado CON_O_SIN_NEGRITA secciones_encabezado 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HACHES",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // HACHES ::= salto_linea secciones_encabezado CON_O_SIN_NEGRITA secciones_encabezado 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HACHES",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // CON_O_SIN_NEGRITA ::= negrita DATOS negrita 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CON_O_SIN_NEGRITA",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // CON_O_SIN_NEGRITA ::= DATOS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CON_O_SIN_NEGRITA",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // DATOS ::= correo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // DATOS ::= numero 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // DATOS ::= texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // DATOS ::= operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // COLUMNA ::= atributos_tabla CON_O_SIN_NEGRITA atributos_tabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COLUMNA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // COLUMNA ::= COLUMNA atributos_tabla CON_O_SIN_NEGRITA atributos_tabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COLUMNA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // FILA ::= atributos_tabla COLUMNA atributos_tabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FILA",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // FILA ::= FILA atributos_tabla COLUMNA atributos_tabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FILA",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // TABLA_CON_O_SIN_SALTO ::= TABLA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TABLA_CON_O_SIN_SALTO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // TABLA_CON_O_SIN_SALTO ::= TABLA_CON_O_SIN_SALTO TABLA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TABLA_CON_O_SIN_SALTO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // TABLA ::= informacion_tabulada FILA informacion_tabulada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TABLA",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // TABLA ::= salto_linea informacion_tabulada FILA informacion_tabulada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TABLA",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo CON_O_SIN_NEGRITA metadatos_titulo metadatos_cabecera secciones_cuerpo secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo metadatos_titulo metadatos_cabecera secciones_cuerpo secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_cabecera secciones_cuerpo secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= tipo_documento CASOS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= CASOS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

