
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package codigo;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Sintax extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\136\000\002\002\004\000\002\002\003\000\002\002" +
    "\004\000\002\003\010\000\002\003\012\000\002\003\013" +
    "\000\002\003\014\000\002\003\014\000\002\003\014\000" +
    "\002\003\014\000\002\003\014\000\002\003\015\000\002" +
    "\003\016\000\002\003\016\000\002\003\017\000\002\003" +
    "\017\000\002\003\017\000\002\003\017\000\002\003\017" +
    "\000\002\003\015\000\002\003\015\000\002\003\015\000" +
    "\002\003\015\000\002\003\015\000\002\003\015\000\002" +
    "\003\016\000\002\003\016\000\002\003\016\000\002\003" +
    "\016\000\002\003\016\000\002\003\016\000\002\003\015" +
    "\000\002\003\015\000\002\003\017\000\002\003\017\000" +
    "\002\003\016\000\002\003\016\000\002\003\017\000\002" +
    "\003\017\000\002\003\014\000\002\003\015\000\002\003" +
    "\015\000\002\003\015\000\002\003\015\000\002\003\016" +
    "\000\002\003\016\000\002\003\016\000\002\003\016\000" +
    "\002\003\016\000\002\003\016\000\002\003\016\000\002" +
    "\003\016\000\002\003\020\000\002\003\020\000\002\003" +
    "\017\000\002\003\017\000\002\003\017\000\002\003\017" +
    "\000\002\003\017\000\002\003\017\000\002\003\017\000" +
    "\002\003\017\000\002\004\006\000\002\004\005\000\002" +
    "\013\004\000\002\013\003\000\002\005\006\000\002\005" +
    "\005\000\002\007\006\000\002\007\005\000\002\006\003" +
    "\000\002\006\003\000\002\006\003\000\002\006\003\000" +
    "\002\012\003\000\002\012\005\000\002\010\006\000\002" +
    "\010\005\000\002\014\004\000\002\014\003\000\002\011" +
    "\006\000\002\011\005\000\002\015\004\000\002\015\003" +
    "\000\002\016\006\000\002\016\007\000\002\022\004\000" +
    "\002\022\005\000\002\023\004\000\002\023\003\000\002" +
    "\024\004\000\002\024\005\000\002\025\004\000\002\025" +
    "\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0111\000\006\004\005\005\007\001\002\000\004\002" +
    "\000\001\002\000\004\005\007\001\002\000\004\002\u0112" +
    "\001\002\000\004\006\010\001\002\000\006\006\011\007" +
    "\012\001\002\000\004\010\u010f\001\002\000\014\007\020" +
    "\015\017\016\013\017\014\020\015\001\002\000\014\007" +
    "\uffba\011\uffba\012\uffba\014\uffba\022\uffba\001\002\000\014" +
    "\007\uffb9\011\uffb9\012\uffb9\014\uffb9\022\uffb9\001\002\000" +
    "\014\007\uffb8\011\uffb8\012\uffb8\014\uffb8\022\uffb8\001\002" +
    "\000\004\007\025\001\002\000\014\007\uffbb\011\uffbb\012" +
    "\uffbb\014\uffbb\022\uffbb\001\002\000\004\006\021\001\002" +
    "\000\004\010\022\001\002\000\004\010\023\001\002\000" +
    "\004\005\024\001\002\000\004\002\ufffd\001\002\000\004" +
    "\006\026\001\002\000\004\010\027\001\002\000\016\010" +
    "\040\011\033\012\035\013\046\021\043\030\044\001\002" +
    "\000\014\010\u0100\011\033\012\035\013\046\021\177\001" +
    "\002\000\010\010\uffa4\021\uffa4\030\uffa4\001\002\000\014" +
    "\010\uffa8\011\uffa8\012\uffa8\021\uffa8\030\uffa8\001\002\000" +
    "\014\015\017\016\013\017\014\020\015\022\072\001\002" +
    "\000\016\010\305\011\033\012\035\013\046\021\057\030" +
    "\060\001\002\000\014\015\017\016\013\017\014\020\015" +
    "\022\072\001\002\000\014\010\244\011\033\012\035\013" +
    "\046\021\177\001\002\000\010\010\235\021\171\030\044" +
    "\001\002\000\004\005\234\001\002\000\014\010\uffc0\011" +
    "\uffc0\012\uffc0\013\uffc0\021\uffc0\001\002\000\016\010\uffb2" +
    "\011\uffb2\012\uffb2\013\uffb2\021\uffb2\030\uffb2\001\002\000" +
    "\012\011\064\012\062\013\065\030\136\001\002\000\006" +
    "\023\133\027\061\001\002\000\016\010\uffae\011\uffae\012" +
    "\uffae\013\uffae\021\uffae\030\uffae\001\002\000\004\014\067" +
    "\001\002\000\010\010\230\021\125\030\123\001\002\000" +
    "\016\010\055\011\033\012\035\013\046\021\057\030\060" +
    "\001\002\000\014\010\213\011\033\012\035\013\046\021" +
    "\177\001\002\000\014\010\166\012\035\013\046\021\167" +
    "\030\060\001\002\000\012\010\147\011\033\012\035\021" +
    "\144\001\002\000\012\011\033\012\035\021\117\030\044" +
    "\001\002\000\004\005\114\001\002\000\016\010\uffb3\011" +
    "\uffb3\012\uffb3\013\uffb3\021\uffb3\030\uffb3\001\002\000\012" +
    "\011\064\012\062\013\065\030\063\001\002\000\004\027" +
    "\061\001\002\000\014\010\uffab\011\uffab\012\uffab\021\uffab" +
    "\030\uffab\001\002\000\014\015\017\016\013\017\014\020" +
    "\015\022\072\001\002\000\004\027\111\001\002\000\014" +
    "\015\017\016\013\017\014\020\015\022\072\001\002\000" +
    "\004\014\067\001\002\000\006\013\104\014\103\001\002" +
    "\000\004\014\071\001\002\000\004\014\100\001\002\000" +
    "\014\015\017\016\013\017\014\020\015\022\072\001\002" +
    "\000\012\015\017\016\013\017\014\020\015\001\002\000" +
    "\004\014\075\001\002\000\010\011\uffb7\012\uffb7\014\uffb7" +
    "\001\002\000\004\014\uffbc\001\002\000\004\022\077\001" +
    "\002\000\010\011\uffb6\012\uffb6\014\uffb6\001\002\000\020" +
    "\013\uffbe\014\uffbe\015\017\016\013\017\014\020\015\022" +
    "\072\001\002\000\004\014\102\001\002\000\004\014\uffbd" +
    "\001\002\000\004\014\071\001\002\000\014\010\uffc3\011" +
    "\uffc3\012\uffc3\013\uffc3\021\uffc3\001\002\000\004\014\106" +
    "\001\002\000\020\013\uffbf\014\uffbf\015\017\016\013\017" +
    "\014\020\015\022\072\001\002\000\004\011\110\001\002" +
    "\000\016\010\uffb5\011\uffb5\012\uffb5\013\uffb5\021\uffb5\030" +
    "\uffb5\001\002\000\014\010\uffaa\011\uffaa\012\uffaa\021\uffaa" +
    "\030\uffaa\001\002\000\004\012\113\001\002\000\016\010" +
    "\uffb1\011\uffb1\012\uffb1\013\uffb1\021\uffb1\030\uffb1\001\002" +
    "\000\004\002\ufffb\001\002\000\014\010\uffa9\011\uffa9\012" +
    "\uffa9\021\uffa9\030\uffa9\001\002\000\010\012\035\021\137" +
    "\030\123\001\002\000\010\011\064\012\062\030\136\001" +
    "\002\000\010\010\134\021\125\030\123\001\002\000\010" +
    "\011\033\021\122\030\123\001\002\000\006\011\064\030" +
    "\131\001\002\000\004\023\133\001\002\000\010\010\126" +
    "\021\125\030\123\001\002\000\004\030\131\001\002\000" +
    "\004\005\130\001\002\000\010\010\uffa5\021\uffa5\030\uffa5" +
    "\001\002\000\004\002\ufff1\001\002\000\004\023\132\001" +
    "\002\000\010\010\uffa6\021\uffa6\030\uffa6\001\002\000\010" +
    "\010\uffa7\021\uffa7\030\uffa7\001\002\000\004\005\135\001" +
    "\002\000\004\002\ufff5\001\002\000\006\023\132\027\111" +
    "\001\002\000\006\012\062\030\131\001\002\000\010\010" +
    "\142\021\125\030\123\001\002\000\016\010\uffaf\011\uffaf" +
    "\012\uffaf\013\uffaf\021\uffaf\030\uffaf\001\002\000\004\005" +
    "\143\001\002\000\004\002\ufff0\001\002\000\006\011\064" +
    "\012\062\001\002\000\012\010\155\012\035\013\046\021" +
    "\154\001\002\000\010\010\152\011\033\021\151\001\002" +
    "\000\004\005\150\001\002\000\004\002\uffea\001\002\000" +
    "\004\011\064\001\002\000\004\005\153\001\002\000\004" +
    "\002\uffe3\001\002\000\006\012\062\013\065\001\002\000" +
    "\004\005\163\001\002\000\010\010\160\013\046\021\157" +
    "\001\002\000\004\013\065\001\002\000\004\005\162\001" +
    "\002\000\014\010\uffc1\011\uffc1\012\uffc1\013\uffc1\021\uffc1" +
    "\001\002\000\004\002\uffdc\001\002\000\004\002\uffe7\001" +
    "\002\000\014\010\176\011\033\012\035\013\046\021\177" +
    "\001\002\000\006\021\171\030\044\001\002\000\004\005" +
    "\170\001\002\000\010\012\062\013\065\030\063\001\002" +
    "\000\004\002\uffed\001\002\000\004\030\136\001\002\000" +
    "\010\010\173\021\125\030\123\001\002\000\004\005\174" +
    "\001\002\000\004\002\ufff3\001\002\000\010\010\210\012" +
    "\035\021\204\001\002\000\004\005\207\001\002\000\010" +
    "\011\064\012\062\013\065\001\002\000\012\010\202\011" +
    "\033\012\035\021\144\001\002\000\010\010\205\012\035" +
    "\021\204\001\002\000\004\005\203\001\002\000\004\002" +
    "\uffcb\001\002\000\004\012\062\001\002\000\004\005\206" +
    "\001\002\000\004\002\uffcd\001\002\000\004\002\uffd1\001" +
    "\002\000\004\005\211\001\002\000\004\002\uffc9\001\002" +
    "\000\012\010\224\011\033\012\035\021\144\001\002\000" +
    "\004\005\222\001\002\000\012\010\216\011\033\012\035" +
    "\021\144\001\002\000\010\010\220\012\035\021\204\001" +
    "\002\000\004\005\217\001\002\000\004\002\uffd2\001\002" +
    "\000\004\005\221\001\002\000\004\002\uffc5\001\002\000" +
    "\004\002\uffd9\001\002\000\010\010\226\011\033\021\151" +
    "\001\002\000\004\005\225\001\002\000\004\002\uffd4\001" +
    "\002\000\004\005\227\001\002\000\004\002\uffc4\001\002" +
    "\000\004\005\231\001\002\000\004\002\ufff7\001\002\000" +
    "\006\013\233\014\103\001\002\000\014\010\uffc2\011\uffc2" +
    "\012\uffc2\013\uffc2\021\uffc2\001\002\000\004\002\ufffc\001" +
    "\002\000\004\005\241\001\002\000\010\010\237\021\125" +
    "\030\123\001\002\000\004\005\240\001\002\000\004\002" +
    "\ufff6\001\002\000\004\002\ufff8\001\002\000\010\010\276" +
    "\013\046\021\157\001\002\000\014\010\263\011\033\012" +
    "\035\013\046\021\177\001\002\000\004\005\261\001\002" +
    "\000\014\010\250\011\033\012\035\013\046\021\177\001" +
    "\002\000\010\010\257\013\046\021\157\001\002\000\012" +
    "\010\252\012\035\013\046\021\154\001\002\000\004\005" +
    "\251\001\002\000\004\002\uffec\001\002\000\004\005\256" +
    "\001\002\000\010\010\254\013\046\021\157\001\002\000" +
    "\004\005\255\001\002\000\004\002\uffe0\001\002\000\004" +
    "\002\uffe6\001\002\000\004\005\260\001\002\000\004\002" +
    "\uffdd\001\002\000\004\002\ufff9\001\002\000\010\010\274" +
    "\013\046\021\157\001\002\000\004\005\273\001\002\000" +
    "\012\010\266\011\033\013\046\021\265\001\002\000\006" +
    "\011\064\013\065\001\002\000\004\005\272\001\002\000" +
    "\010\010\270\013\046\021\157\001\002\000\004\005\271" +
    "\001\002\000\004\002\uffdf\001\002\000\004\002\uffe5\001" +
    "\002\000\004\002\uffeb\001\002\000\004\005\275\001\002" +
    "\000\004\002\uffde\001\002\000\004\005\277\001\002\000" +
    "\004\002\uffe2\001\002\000\004\012\301\001\002\000\016" +
    "\010\uffb0\011\uffb0\012\uffb0\013\uffb0\021\uffb0\030\uffb0\001" +
    "\002\000\014\010\357\011\033\012\035\013\046\021\177" +
    "\001\002\000\012\010\345\011\033\012\035\021\144\001" +
    "\002\000\010\011\033\021\333\030\044\001\002\000\004" +
    "\005\332\001\002\000\014\010\311\011\033\013\046\021" +
    "\312\030\060\001\002\000\014\010\320\011\033\012\035" +
    "\013\046\021\177\001\002\000\006\021\171\030\044\001" +
    "\002\000\004\005\313\001\002\000\010\011\064\013\065" +
    "\030\063\001\002\000\004\002\uffee\001\002\000\010\010" +
    "\315\021\125\030\123\001\002\000\004\005\316\001\002" +
    "\000\004\002\ufff2\001\002\000\012\010\326\011\033\012" +
    "\035\021\144\001\002\000\004\005\324\001\002\000\010" +
    "\010\322\011\033\021\151\001\002\000\004\005\323\001" +
    "\002\000\004\002\uffca\001\002\000\004\002\uffd0\001\002" +
    "\000\010\010\330\011\033\021\151\001\002\000\004\005" +
    "\327\001\002\000\004\002\uffc8\001\002\000\004\005\331" +
    "\001\002\000\004\002\uffcc\001\002\000\004\002\ufffa\001" +
    "\002\000\006\011\064\030\136\001\002\000\010\011\033" +
    "\021\122\030\123\001\002\000\010\010\336\021\125\030" +
    "\123\001\002\000\004\005\337\001\002\000\004\002\ufff4" +
    "\001\002\000\010\010\341\021\125\030\123\001\002\000" +
    "\004\005\342\001\002\000\004\002\uffef\001\002\000\010" +
    "\010\354\012\035\021\204\001\002\000\012\010\347\011" +
    "\033\013\046\021\265\001\002\000\004\005\346\001\002" +
    "\000\004\002\uffe9\001\002\000\004\005\353\001\002\000" +
    "\010\010\351\013\046\021\157\001\002\000\004\005\352" +
    "\001\002\000\004\002\uffdb\001\002\000\004\002\uffe8\001" +
    "\002\000\004\005\355\001\002\000\004\002\uffe4\001\002" +
    "\000\012\010\370\011\033\012\035\021\144\001\002\000" +
    "\004\005\366\001\002\000\012\010\362\011\033\012\035" +
    "\021\144\001\002\000\010\010\364\012\035\021\204\001" +
    "\002\000\004\005\363\001\002\000\004\002\uffd5\001\002" +
    "\000\004\005\365\001\002\000\004\002\uffc7\001\002\000" +
    "\004\002\uffd8\001\002\000\010\010\372\011\033\021\151" +
    "\001\002\000\004\005\371\001\002\000\004\002\uffd3\001" +
    "\002\000\004\005\373\001\002\000\004\002\uffc6\001\002" +
    "\000\004\011\375\001\002\000\016\010\uffb4\011\uffb4\012" +
    "\uffb4\013\uffb4\021\uffb4\030\uffb4\001\002\000\012\010\u010b" +
    "\011\033\012\035\021\144\001\002\000\004\010\u0108\001" +
    "\002\000\004\005\u0107\001\002\000\012\010\u0103\011\033" +
    "\012\035\021\144\001\002\000\010\010\u0105\012\035\021" +
    "\204\001\002\000\004\005\u0104\001\002\000\004\002\uffd7" +
    "\001\002\000\004\005\u0106\001\002\000\004\002\uffcf\001" +
    "\002\000\004\002\uffda\001\002\000\004\005\u0109\001\002" +
    "\000\004\002\uffe1\001\002\000\010\010\u010d\011\033\021" +
    "\151\001\002\000\004\005\u010c\001\002\000\004\002\uffd6" +
    "\001\002\000\004\005\u010e\001\002\000\004\002\uffce\001" +
    "\002\000\004\010\u0110\001\002\000\004\005\u0111\001\002" +
    "\000\004\002\ufffe\001\002\000\004\002\001\001\002\000" +
    "\004\002\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0111\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\004\003\u0112\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\006" +
    "\015\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\030\004\040\010\041\011\044\013\027\014\047\015\033" +
    "\021\035\022\031\023\036\024\030\025\046\001\001\000" +
    "\016\004\160\010\041\011\044\014\u0100\015\375\021\376" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\073\012\373\001\001\000\022\004\040\010\041\011\140" +
    "\013\301\014\305\021\302\022\031\023\303\001\001\000" +
    "\006\006\073\012\277\001\001\000\016\004\040\010\041" +
    "\011\044\013\241\014\244\015\242\001\001\000\010\022" +
    "\114\024\030\025\235\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\231\001\001\000\004" +
    "\024\126\001\001\000\022\004\040\010\055\011\044\013" +
    "\050\015\051\021\052\022\031\023\053\001\001\000\014" +
    "\004\160\010\041\011\044\014\213\015\211\001\001\000" +
    "\014\004\040\011\140\013\163\022\031\023\164\001\001" +
    "\000\012\010\041\011\044\014\145\015\144\001\001\000" +
    "\020\010\041\011\044\014\120\015\115\022\114\024\030" +
    "\025\117\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\073\012\111\001\001\000\002\001\001\000\006\006" +
    "\073\012\106\001\001\000\004\005\065\001\001\000\002" +
    "\001\001\000\004\007\067\001\001\000\002\001\001\000" +
    "\006\006\073\012\072\001\001\000\004\006\075\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\006\073\012\100" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\007" +
    "\104\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\006\073\012\100\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\011\140\024" +
    "\030\025\137\001\001\000\002\001\001\000\004\024\126" +
    "\001\001\000\010\010\055\024\030\025\123\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\024\126\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\024\126\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\004\040\011\140\013\155\001\001\000\004" +
    "\010\055\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\004\160\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\004\160\010\041\011" +
    "\044\014\177\015\174\001\001\000\010\022\114\024\030" +
    "\025\171\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\024\126\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\140\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\010\055" +
    "\011\044\015\200\001\001\000\004\011\140\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\010\041\011\140\014\222" +
    "\001\001\000\002\001\001\000\010\010\055\011\044\015" +
    "\214\001\001\000\004\011\140\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\055\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\024" +
    "\126\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\004\160\001\001\000\014\004\040\010" +
    "\041\011\140\013\261\014\263\001\001\000\002\001\001" +
    "\000\014\004\040\010\055\011\044\013\245\015\246\001" +
    "\001\000\004\004\160\001\001\000\010\004\040\011\140" +
    "\013\252\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\004\160\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\004\160\001\001" +
    "\000\002\001\001\000\010\004\040\010\055\013\266\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\004\160" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\004\160\010\041\011\044\014\357" +
    "\015\355\001\001\000\012\010\041\011\044\014\343\015" +
    "\342\001\001\000\014\010\041\014\333\022\114\024\030" +
    "\025\334\001\001\000\002\001\001\000\014\004\040\010" +
    "\055\013\306\022\031\023\307\001\001\000\014\004\160" +
    "\010\041\011\044\014\320\015\316\001\001\000\010\022" +
    "\114\024\030\025\313\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\024\126\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\010\041\011\140" +
    "\014\324\001\001\000\002\001\001\000\004\010\055\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\055\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\010\055\024\030\025\337\001" +
    "\001\000\004\024\126\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\024\126\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\140\001\001\000\010\004\040" +
    "\010\055\013\347\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\004\160\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\010\041\011\140\014\366" +
    "\001\001\000\002\001\001\000\010\010\055\011\044\015" +
    "\360\001\001\000\004\011\140\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\055\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\010\041\011\140" +
    "\014\u0109\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\010\055\011\044\015\u0101\001\001\000\004\011\140" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\055\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action_part00000000(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= CASOS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= tipo_documento CASOS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_cabecera secciones_cuerpo secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo metadatos_titulo metadatos_cabecera secciones_cuerpo secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo IMAGEN_LOCAL_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo IMAGEN_INTERNET_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo IMAGEN_LOCAL_CON_O_SIN_SALTO IMAGEN_INTERNET_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO IMAGEN_LOCAL_CON_O_SIN_SALTO IMAGEN_INTERNET_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO IMAGEN_LOCAL_CON_O_SIN_SALTO IMAGEN_INTERNET_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO IMAGEN_LOCAL_CON_O_SIN_SALTO IMAGEN_INTERNET_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO IMAGEN_LOCAL_CON_O_SIN_SALTO IMAGEN_INTERNET_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO IMAGEN_LOCAL_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO IMAGEN_INTERNET_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO IMAGEN_LOCAL_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO IMAGEN_INTERNET_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO IMAGEN_LOCAL_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO IMAGEN_INTERNET_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO VINCULO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO VINCULO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO VINCULO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO VINCULO_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO VINCULO_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO VINCULO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO VINCULO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo VINCULO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO VINCULO_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO VINCULO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo PARRAFO_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // CASOS ::= elementos_raiz metadatos_cabecera metadatos_titulo DATOS metadatos_titulo metadatos_cabecera secciones_cuerpo HACHES_CON_O_SIN_SALTO TABLA_CON_O_SIN_SALTO PARRAFO_CON_O_SIN_SALTO HACHES_CON_O_SIN_SALTO secciones_cuerpo elementos_raiz 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CASOS",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // TABLA ::= salto_linea informacion_tabulada FILA informacion_tabulada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TABLA",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // TABLA ::= informacion_tabulada FILA informacion_tabulada 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TABLA",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // TABLA_CON_O_SIN_SALTO ::= TABLA_CON_O_SIN_SALTO TABLA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TABLA_CON_O_SIN_SALTO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // TABLA_CON_O_SIN_SALTO ::= TABLA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TABLA_CON_O_SIN_SALTO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // FILA ::= FILA atributos_tabla COLUMNA atributos_tabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FILA",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // FILA ::= atributos_tabla COLUMNA atributos_tabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FILA",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // COLUMNA ::= COLUMNA atributos_tabla CON_O_SIN_NEGRITA atributos_tabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COLUMNA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // COLUMNA ::= atributos_tabla CON_O_SIN_NEGRITA atributos_tabla 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COLUMNA",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // DATOS ::= operacion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // DATOS ::= texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // DATOS ::= numero 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // DATOS ::= correo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATOS",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // CON_O_SIN_NEGRITA ::= DATOS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CON_O_SIN_NEGRITA",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // CON_O_SIN_NEGRITA ::= negrita DATOS negrita 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CON_O_SIN_NEGRITA",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // HACHES ::= salto_linea secciones_encabezado CON_O_SIN_NEGRITA secciones_encabezado 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HACHES",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // HACHES ::= secciones_encabezado CON_O_SIN_NEGRITA secciones_encabezado 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HACHES",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // HACHES_CON_O_SIN_SALTO ::= HACHES_CON_O_SIN_SALTO HACHES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HACHES_CON_O_SIN_SALTO",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // HACHES_CON_O_SIN_SALTO ::= HACHES 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HACHES_CON_O_SIN_SALTO",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // PARRAFO ::= salto_linea agrupacion_contenido CON_O_SIN_NEGRITA agrupacion_contenido 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // PARRAFO ::= agrupacion_contenido CON_O_SIN_NEGRITA agrupacion_contenido 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // PARRAFO_CON_O_SIN_SALTO ::= PARRAFO_CON_O_SIN_SALTO PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO_CON_O_SIN_SALTO",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // PARRAFO_CON_O_SIN_SALTO ::= PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO_CON_O_SIN_SALTO",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // VINCULO ::= vinculo direccion DATOS vinculo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VINCULO",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // VINCULO ::= salto_linea vinculo direccion DATOS vinculo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VINCULO",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // IMAGEN_LOCAL ::= imagen url_local 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEN_LOCAL",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // IMAGEN_LOCAL ::= salto_linea imagen url_local 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEN_LOCAL",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // IMAGEN_LOCAL_CON_O_SIN_SALTO ::= IMAGEN_LOCAL_CON_O_SIN_SALTO IMAGEN_LOCAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEN_LOCAL_CON_O_SIN_SALTO",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // IMAGEN_LOCAL_CON_O_SIN_SALTO ::= IMAGEN_LOCAL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEN_LOCAL_CON_O_SIN_SALTO",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // IMAGEN_INTERNET ::= imagen direccion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEN_INTERNET",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // IMAGEN_INTERNET ::= salto_linea imagen direccion 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEN_INTERNET",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // IMAGEN_INTERNET_CON_O_SIN_SALTO ::= IMAGEN_INTERNET_CON_O_SIN_SALTO IMAGEN_INTERNET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEN_INTERNET_CON_O_SIN_SALTO",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // IMAGEN_INTERNET_CON_O_SIN_SALTO ::= IMAGEN_INTERNET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEN_INTERNET_CON_O_SIN_SALTO",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Sintax$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
              return CUP$Sintax$do_action_part00000000(
                               CUP$Sintax$act_num,
                               CUP$Sintax$parser,
                               CUP$Sintax$stack,
                               CUP$Sintax$top);
    }
}

}
